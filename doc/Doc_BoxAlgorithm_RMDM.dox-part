    /**
     * \page BoxAlgorithmRMDM RMDM
    __________________________________________________________________
    
    Detailed description
    __________________________________________________________________
    
     * |OVP_DocBegin_BoxAlgorithmRMDM_Description|

    This box aims to create a machine learning model based on MDM
    algorithm implemented in Pyriemann. 

    The user can modify nearly all the settings from Pyriemann. 
    It is possible for the user to test his model with a test set. 
    He can also save the model in a file which he can use with 
    the ProcessML box.

    Classification by Minimum Distance to Mean.

    Classification by nearest centroid. For each of the given classes, a
    centroid is estimated according to the chosen metric. Then, for each
    new point, the class is affected according to the nearest centroid.   
    
    * |OVP_DocEnd_BoxAlgorithmRMDM_Description|
    __________________________________________________________________
    
    Settings description
    __________________________________________________________________
    
     * |OVP_DocBegin_BoxAlgorithmRMDM_Settings|
     * |OVP_DocEnd_BoxAlgorithmRMDM_Settings|
    
     * |OVP_DocBegin_BoxAlgorithmRMDM_Setting1|
     The box clock frequency. The Python process function is called at 
     each tick.
     * |OVP_DocEnd_BoxAlgorithmRMDM_Setting1|
    
     * |OVP_DocBegin_BoxAlgorithmRMDM_Setting2|
     The path to the file where the user want to save the model.
     If empty, the model is not saved.
     * |OVP_DocEnd_BoxAlgorithmRMDM_Setting2|
    
     * |OVP_DocBegin_BoxAlgorithmRMDM_Setting3|
     The path to the file where the user want to load a model.
     If empty, a new model will be created.
     * |OVP_DocEnd_BoxAlgorithmRMDM_Setting3|
    
      * |OVP_DocBegin_BoxAlgorithmRMDM_Setting4|
     The name of the scikit-learn algorithm. The user should not try
     to modify this setting.
     * |OVP_DocEnd_BoxAlgorithmRMDM_Setting4|
    
      * |OVP_DocBegin_BoxAlgorithmRMDM_Setting5|
     Float between 0 and 1 (1 not included) which represents the proportion 
     of the input dataset transformed into a test set, allowing us to 
     evaluate our model once the training on the set train is done. If 0 
     is filled in, then all the data will constitute the train set and no 
     metrics will be displayed.
     * |OVP_DocEnd_BoxAlgorithmRMDM_Setting5|
    
      * |OVP_DocBegin_BoxAlgorithmRMDM_Setting6|
     Names of the labels of input's data. This parameter is only usefull 
     when the PolyMode is used (several streamed matrix in input, one for
     each label). Then the labels as to be described as follows :
     "my_label_1, mylabel_2, my_label_3, etc"
     Otherwise the labels will be "1, 2, 3, etc". 
     If the input mode is ov-mode (one input streamed matrix and one 
     stimulation), the labels will be read by the stimulations.
     * |OVP_DocEnd_BoxAlgorithmRMDM_Setting6|
    
    The rest of the settings are from scikit-learn. You can find 
    their purpose here :
    
    https://pyriemann.readthedocs.io/en/latest/generated/pyriemann.classification.MDM.html#pyriemann.classification.MDM
    Examples description
    __________________________________________________________________
    
     * |OVP_DocBegin_BoxAlgorithmRMDM_Examples|
     See <a href="http://openvibe.inria.fr/tutorial-using-python-with-openvibe">this page</a> for commented examples.
     * |OVP_DocEnd_BoxAlgorithmRMDM_Examples|
    __________________________________________________________________
    
    Miscellaneous description
    __________________________________________________________________
    
     * |OVP_DocBegin_BoxAlgorithmRMDM_Miscellaneous|
     * |OVP_DocEnd_BoxAlgorithmRMDM_Miscellaneous|
     */